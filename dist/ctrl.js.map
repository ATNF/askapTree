{"version":3,"sources":["../src/ctrl.js"],"names":["PanelCtrl","loadPluginCss","_","$","d3","window","dark","light","panelDefaults","influxHost","database","username","password","treeName","treePanelCtrl","$scope","$injector","defaults","panel","panelContainer","svgContainer","treeObj","treeDivId","id","containerDivId","events","on","onInitEditMode","bind","container","scope","elem","treeByClass","find","append","childNodes","setContainer","makeTree","addEditorTab","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,qB,kBAAAA,S;AACCC,yB,kBAAAA,a;;AACFC,a;;AACAC,a;;AACKC,c;;;;;;;;;;;;;;;;;;;;;AAA6B;AACzCC,mBAAOD,EAAP,GAAYA,EAAZ;AACA;AACAH,0BAAc;AACZK,sBAAM,sCADM;AAEZC,uBAAO;AAFK,aAAd;AAMMC,yB,GAAgB;AAClBC,4BAAY,EADM;AAElBC,0BAAW,EAFO;AAGlBC,0BAAU,EAHQ;AAIlBC,0BAAU,EAJQ;AAKlBC,0BAAU;AALQ,a;;iEAOhBC,a;;;AACF,uCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,8IACrBD,MADqB,EACbC,SADa;;AAE3Bd,sBAAEe,QAAF,CAAW,MAAKC,KAAhB,EAAuBV,aAAvB;AACA,0BAAKW,cAAL,GAAsB,IAAtB;AACA,0BAAKD,KAAL,CAAWE,YAAX,GAA0B,IAA1B;AACA,0BAAKC,OAAL,GAAe,IAAf;AACA,0BAAKH,KAAL,CAAWI,SAAX,GAAuB,cAAc,MAAKJ,KAAL,CAAWK,EAAhD;AACA,0BAAKC,cAAL,GAAsB,eAAe,MAAKN,KAAL,CAAWI,SAAhD;;AAEA,0BAAKG,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AAT2B;AAU9B;;;;iDAEYC,S,EAAW;AACpB,6BAAKV,cAAL,GAAsBU,SAAtB;AACA,6BAAKX,KAAL,CAAWE,YAAX,GAA0BS,SAA1B;AACH;;;yCAEIC,K,EAAOC,I,EAAM;AACd,4BAAIC,cAAcD,KAAKE,IAAL,CAAU,kBAAV,CAAlB;AACAD,oCAAYE,MAAZ,CAAmB,cAAY,KAAKV,cAAjB,GAAgC,UAAnD;AACA,4BAAIK,YAAYG,YAAY,CAAZ,EAAeG,UAAf,CAA0B,CAA1B,CAAhB;AACA,6BAAKC,YAAL,CAAkBP,SAAlB;AACA;AACA,6BAAKR,OAAL,GAAe,IAAIgB,QAAJ,CAAa,KAAKlB,cAAlB,EAAkC,KAAKD,KAAvC,CAAf;AACH;;;qDAEgB;AACb,6BAAKoB,YAAL,CAAkB,SAAlB,EAA6B,4CAA7B,EAA2E,CAA3E;AACH;;;;cA7BuBtC,S;;AAgC5Bc,0BAAcyB,WAAd,GAA4B,wBAA5B;;qCAEIzB,a;;wCACAA,a","file":"ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport { loadPluginCss } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport * as d3 from './external/d3.min'; // Include the d3 library\nwindow.d3 = d3;\n//console.log(d3);\nloadPluginCss({\n  dark: 'plugins/atnf-tree-panel/css/dark.css',\n  light: 'plugins/atnf-tree-panel/css/light.css',\n});\nimport './external/tree'; // Include the sample d3 hierarchy code\n\nconst panelDefaults = {\n    influxHost: '',\n    database : '',\n    username: '',\n    password: '',\n    treeName: ''\n};\nclass treePanelCtrl extends PanelCtrl {\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n        this.panelContainer = null;\n        this.panel.svgContainer = null;\n        this.treeObj = null;\n        this.panel.treeDivId = 'tree_svg_' + this.panel.id;\n        this.containerDivId = 'container_' + this.panel.treeDivId;\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    }\n\n    setContainer(container) {\n        this.panelContainer = container;\n        this.panel.svgContainer = container;\n    }\n\n    link(scope, elem) {    \n        var treeByClass = elem.find('.grafana-d3-tree');\n        treeByClass.append('<div if=\"'+this.containerDivId+'\"></div>');\n        var container = treeByClass[0].childNodes[0];\n        this.setContainer(container);\n        //console.log(\"Calling makeTree function\");\n        this.treeObj = new makeTree(this.panelContainer, this.panel);\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/atnf-tree-panel/editor.html', 2);\n    }\n}\n\ntreePanelCtrl.templateUrl = 'partials/template.html';\nexport {\n    treePanelCtrl,\n    treePanelCtrl as MetricsPanelCtrl\n};\n"]}